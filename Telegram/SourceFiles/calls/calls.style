/*
This file is part of Telegram Desktop,
the official desktop version of Telegram messaging app, see https://telegram.org

Telegram Desktop is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

It is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

In addition, as a special exception, the copyright holders give permission
to link the code of portions of this program with the OpenSSL library.

Full license: https://github.com/telegramdesktop/tdesktop/blob/master/LICENSE
Copyright (c) 2014-2017 John Preston, https://desktop.telegram.org
*/
using "basic.style";

using "ui/widgets/widgets.style";

callWidth: 300px;
callHeight: 470px;
callShadow: Shadow {
	left: icon {{ "call_shadow_left", windowShadowFg }};
	topLeft: icon {{ "call_shadow_top_left", windowShadowFg }};
	top: icon {{ "call_shadow_top", windowShadowFg }};
	topRight: icon {{ "call_shadow_top_left-flip_horizontal", windowShadowFg }};
	right: icon {{ "call_shadow_left-flip_horizontal", windowShadowFg }};
	bottomRight: icon {{ "call_shadow_top_left-flip_vertical-flip_horizontal", windowShadowFg }};
	bottom: icon {{ "call_shadow_top-flip_vertical", windowShadowFg }};
	bottomLeft: icon {{ "call_shadow_top_left-flip_vertical", windowShadowFg }};
	extend: margins(9px, 8px, 9px, 10px);
	fallback: windowShadowFgFallback;
}

callButton: IconButton {
	width: 64px;
	height: 64px;

	iconPosition: point(20px, 20px);

	rippleAreaPosition: point(8px, 8px);
	rippleAreaSize: 48px;
	ripple: defaultRippleAnimation;
}

callAnswer: CallButton {
	button: IconButton(callButton) {
		icon: icon {{ "call_answer", callIconFg }};
		ripple: RippleAnimation(defaultRippleAnimation) {
			color: callAnswerRipple;
		}
	}
	bg: callAnswerBg;
}
callHangup: CallButton {
	button: IconButton(callButton) {
		icon: icon {{ "call_discard", callIconFg }};
		iconPosition: point(20px, 24px);
		ripple: RippleAnimation(defaultRippleAnimation) {
			color: callHangupRipple;
		}
	}
	bg: callHangupBg;
}
callMuteToggle: IconButton(callButton) {
	icon: icon {{ "call_record_active", callIconFg }};
	ripple: RippleAnimation(defaultRippleAnimation) {
		color: callMuteRipple;
	}
}
callUnmuteIcon: icon {{ "call_record_muted", callIconFg }};

callControlsTop: 84px;
callControlsSkip: 8px;
callMuteRight: 12px;
